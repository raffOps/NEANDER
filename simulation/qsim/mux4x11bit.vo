// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.1.0 Build 162 10/23/2013 SJ Web Edition"

// DATE "04/20/2018 21:32:11"

// 
// Device: Altera EP3C5F256C6 Package FBGA256
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module mux4x11bit (
	outputt,
	entradaA,
	sel,
	entradaB,
	entradaC,
	entradaD);
output 	outputt;
input 	entradaA;
input 	[1:0] sel;
input 	entradaB;
input 	entradaC;
input 	entradaD;

// Design Ports Information
// outputt	=>  Location: PIN_N2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// entradaC	=>  Location: PIN_C3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// sel[1]	=>  Location: PIN_R1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// entradaB	=>  Location: PIN_P1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// sel[0]	=>  Location: PIN_N6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// entradaA	=>  Location: PIN_K2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// entradaD	=>  Location: PIN_P2,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \outputt~output_o ;
wire \entradaD~input_o ;
wire \entradaB~input_o ;
wire \entradaA~input_o ;
wire \sel[1]~input_o ;
wire \sel[0]~input_o ;
wire \inst2|inst3~0_combout ;
wire \entradaC~input_o ;
wire \inst2|inst3~1_combout ;


// Location: IOOBUF_X0_Y7_N16
cycloneiii_io_obuf \outputt~output (
	.i(\inst2|inst3~1_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\outputt~output_o ),
	.obar());
// synopsys translate_off
defparam \outputt~output .bus_hold = "false";
defparam \outputt~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y4_N15
cycloneiii_io_ibuf \entradaD~input (
	.i(entradaD),
	.ibar(gnd),
	.o(\entradaD~input_o ));
// synopsys translate_off
defparam \entradaD~input .bus_hold = "false";
defparam \entradaD~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y4_N22
cycloneiii_io_ibuf \entradaB~input (
	.i(entradaB),
	.ibar(gnd),
	.o(\entradaB~input_o ));
// synopsys translate_off
defparam \entradaB~input .bus_hold = "false";
defparam \entradaB~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y8_N1
cycloneiii_io_ibuf \entradaA~input (
	.i(entradaA),
	.ibar(gnd),
	.o(\entradaA~input_o ));
// synopsys translate_off
defparam \entradaA~input .bus_hold = "false";
defparam \entradaA~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y5_N22
cycloneiii_io_ibuf \sel[1]~input (
	.i(sel[1]),
	.ibar(gnd),
	.o(\sel[1]~input_o ));
// synopsys translate_off
defparam \sel[1]~input .bus_hold = "false";
defparam \sel[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X7_Y0_N15
cycloneiii_io_ibuf \sel[0]~input (
	.i(sel[0]),
	.ibar(gnd),
	.o(\sel[0]~input_o ));
// synopsys translate_off
defparam \sel[0]~input .bus_hold = "false";
defparam \sel[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y4_N0
cycloneiii_lcell_comb \inst2|inst3~0 (
// Equation(s):
// \inst2|inst3~0_combout  = (\sel[1]~input_o  & (((\sel[0]~input_o )))) # (!\sel[1]~input_o  & ((\sel[0]~input_o  & (\entradaB~input_o )) # (!\sel[0]~input_o  & ((\entradaA~input_o )))))

	.dataa(\entradaB~input_o ),
	.datab(\entradaA~input_o ),
	.datac(\sel[1]~input_o ),
	.datad(\sel[0]~input_o ),
	.cin(gnd),
	.combout(\inst2|inst3~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst2|inst3~0 .lut_mask = 16'hFA0C;
defparam \inst2|inst3~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X1_Y24_N1
cycloneiii_io_ibuf \entradaC~input (
	.i(entradaC),
	.ibar(gnd),
	.o(\entradaC~input_o ));
// synopsys translate_off
defparam \entradaC~input .bus_hold = "false";
defparam \entradaC~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y4_N10
cycloneiii_lcell_comb \inst2|inst3~1 (
// Equation(s):
// \inst2|inst3~1_combout  = (\inst2|inst3~0_combout  & ((\entradaD~input_o ) # ((!\sel[1]~input_o )))) # (!\inst2|inst3~0_combout  & (((\sel[1]~input_o  & \entradaC~input_o ))))

	.dataa(\entradaD~input_o ),
	.datab(\inst2|inst3~0_combout ),
	.datac(\sel[1]~input_o ),
	.datad(\entradaC~input_o ),
	.cin(gnd),
	.combout(\inst2|inst3~1_combout ),
	.cout());
// synopsys translate_off
defparam \inst2|inst3~1 .lut_mask = 16'hBC8C;
defparam \inst2|inst3~1 .sum_lutc_input = "datac";
// synopsys translate_on

assign outputt = \outputt~output_o ;

endmodule
